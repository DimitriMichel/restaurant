{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/dimitripl/Developer/restaurant/Components/Checkbox.js\";\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { motion, useMotionValue, useTransform } from 'framer-motion';\nconst tickVariants = {\n  pressed: isChecked => ({\n    pathLength: isChecked ? 0.85 : 0.2\n  }),\n  checked: {\n    pathLength: 1\n  },\n  unchecked: {\n    pathLength: 0\n  }\n};\nconst boxVariants = {\n  hover: {\n    scale: 1.05,\n    strokeWidth: 60\n  },\n  pressed: {\n    scale: 0.95,\n    strokeWidth: 35\n  },\n  checked: {\n    stroke: '#FF008C'\n  },\n  unchecked: {\n    stroke: '#ddd',\n    strokeWidth: 50\n  }\n};\nexport const Checkbox = () => {\n  const {\n    0: isChecked,\n    1: setIsChecked\n  } = useState(false);\n  const pathLength = useMotionValue(0);\n  const opacity = useTransform(pathLength, [0.05, 0.15], [0, 1]);\n  return /*#__PURE__*/_jsxDEV(motion.svg, {\n    initial: false,\n    animate: isChecked ? 'checked' : 'unchecked',\n    whileHover: \"hover\",\n    whileTap: \"pressed\",\n    viewBox: \"0 0 20 10\",\n    width: \"440\",\n    height: \"440\",\n    onClick: () => setIsChecked(!isChecked),\n    children: [/*#__PURE__*/_jsxDEV(motion.path, {\n      d: \"M 72 136 C 72 100.654 100.654 72 136 72 L 304 72 C 339.346 72 368 100.654 368 136 L 368 304 C 368 339.346 339.346 368 304 368 L 136 368 C 100.654 368 72 339.346 72 304 Z\",\n      fill: \"transparent\",\n      strokeWidth: \"50\",\n      stroke: \"#FF008C\",\n      variants: boxVariants\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(motion.path, {\n      d: \"M 0 128.666 L 128.658 257.373 L 341.808 0\",\n      transform: \"translate(54.917 88.332) rotate(-4 170.904 128.687)\",\n      fill: \"transparent\",\n      strokeWidth: \"65\",\n      stroke: \"hsl(0, 0%, 100%)\",\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      variants: tickVariants,\n      style: {\n        pathLength,\n        opacity\n      },\n      custom: isChecked\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(motion.path, {\n      d: \"M 0 128.666 L 128.658 257.373 L 341.808 0\",\n      transform: \"translate(54.917 68.947) rotate(-4 170.904 128.687)\",\n      fill: \"transparent\",\n      strokeWidth: \"65\",\n      stroke: \"#7700FF\",\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      variants: tickVariants,\n      style: {\n        pathLength,\n        opacity\n      },\n      custom: isChecked\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }, this);\n};\nexport default Checkbox;","map":{"version":3,"sources":["/Users/dimitripl/Developer/restaurant/Components/Checkbox.js"],"names":["React","useState","motion","useMotionValue","useTransform","tickVariants","pressed","isChecked","pathLength","checked","unchecked","boxVariants","hover","scale","strokeWidth","stroke","Checkbox","setIsChecked","opacity"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useState } from 'react';\nimport { motion, useMotionValue, useTransform } from 'framer-motion';\n\nconst tickVariants = {\n  pressed: (isChecked) => ({ pathLength: isChecked ? 0.85 : 0.2 }),\n  checked: { pathLength: 1 },\n  unchecked: { pathLength: 0 },\n};\n\nconst boxVariants = {\n  hover: { scale: 1.05, strokeWidth: 60 },\n  pressed: { scale: 0.95, strokeWidth: 35 },\n  checked: { stroke: '#FF008C' },\n  unchecked: { stroke: '#ddd', strokeWidth: 50 },\n};\n\nexport const Checkbox = () => {\n  const [isChecked, setIsChecked] = useState(false);\n  const pathLength = useMotionValue(0);\n  const opacity = useTransform(pathLength, [0.05, 0.15], [0, 1]);\n\n  return (\n\n      <motion.svg\n        initial={false}\n        animate={isChecked ? 'checked' : 'unchecked'}\n        whileHover=\"hover\"\n        whileTap=\"pressed\"\n        viewBox=\"0 0 20 10\"\n        width=\"440\"\n        height=\"440\"\n        onClick={() => setIsChecked(!isChecked)}\n      >\n        <motion.path\n          d=\"M 72 136 C 72 100.654 100.654 72 136 72 L 304 72 C 339.346 72 368 100.654 368 136 L 368 304 C 368 339.346 339.346 368 304 368 L 136 368 C 100.654 368 72 339.346 72 304 Z\"\n          fill=\"transparent\"\n          strokeWidth=\"50\"\n          stroke=\"#FF008C\"\n          variants={boxVariants}\n        />\n        <motion.path\n          d=\"M 0 128.666 L 128.658 257.373 L 341.808 0\"\n          transform=\"translate(54.917 88.332) rotate(-4 170.904 128.687)\"\n          fill=\"transparent\"\n          strokeWidth=\"65\"\n          stroke=\"hsl(0, 0%, 100%)\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          variants={tickVariants}\n          style={{ pathLength, opacity }}\n          custom={isChecked}\n        />\n        <motion.path\n          d=\"M 0 128.666 L 128.658 257.373 L 341.808 0\"\n          transform=\"translate(54.917 68.947) rotate(-4 170.904 128.687)\"\n          fill=\"transparent\"\n          strokeWidth=\"65\"\n          stroke=\"#7700FF\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          variants={tickVariants}\n          style={{ pathLength, opacity }}\n          custom={isChecked}\n        />\n      </motion.svg>\n\n  );\n};\nexport default Checkbox;\n"]},"metadata":{},"sourceType":"module"}