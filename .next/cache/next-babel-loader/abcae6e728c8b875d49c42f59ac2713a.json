{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/dimitripl/Developer/restaurant/Components/Checkbox.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport { motion, useMotionValue, useTransform } from \"framer-motion\";\nvar tickVariants = {\n  pressed: function pressed(isChecked) {\n    return {\n      pathLength: isChecked ? 0.85 : 0.2\n    };\n  },\n  checked: {\n    pathLength: 1\n  },\n  unchecked: {\n    pathLength: 0\n  }\n};\nvar boxVariants = {\n  hover: {\n    scale: 1.05,\n    strokeWidth: 60\n  },\n  pressed: {\n    scale: 0.95,\n    strokeWidth: 35\n  },\n  checked: {\n    stroke: \"#FF008C\"\n  },\n  unchecked: {\n    stroke: \"#ddd\",\n    strokeWidth: 50\n  }\n};\nexport var Checkbox = function Checkbox() {\n  _s();\n\n  var _useState = useState(false),\n      isChecked = _useState[0],\n      setIsChecked = _useState[1];\n\n  var pathLength = useMotionValue(0);\n  var opacity = useTransform(pathLength, [0.05, 0.15], [0, 1]);\n  return /*#__PURE__*/_jsxDEV(motion.svg, {\n    initial: false,\n    animate: isChecked ? \"checked\" : \"unchecked\",\n    whileHover: \"hover\",\n    whileTap: \"pressed\",\n    width: \"440\",\n    height: \"440\",\n    onClick: function onClick() {\n      return setIsChecked(!isChecked);\n    },\n    children: [/*#__PURE__*/_jsxDEV(motion.path, {\n      d: \"M 72 136 C 72 100.654 100.654 72 136 72 L 304 72 C 339.346 72 368 100.654 368 136 L 368 304 C 368 339.346 339.346 368 304 368 L 136 368 C 100.654 368 72 339.346 72 304 Z\",\n      fill: \"transparent\",\n      strokeWidth: \"50\",\n      stroke: \"#FF008C\",\n      variants: boxVariants\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(motion.path, {\n      d: \"M 0 128.666 L 128.658 257.373 L 341.808 0\",\n      transform: \"translate(54.917 88.332) rotate(-4 170.904 128.687)\",\n      fill: \"transparent\",\n      strokeWidth: \"65\",\n      stroke: \"hsl(0, 0%, 100%)\",\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      variants: tickVariants,\n      style: {\n        pathLength: pathLength,\n        opacity: opacity\n      },\n      custom: isChecked\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(motion.path, {\n      d: \"M 0 128.666 L 128.658 257.373 L 341.808 0\",\n      transform: \"translate(54.917 68.947) rotate(-4 170.904 128.687)\",\n      fill: \"transparent\",\n      strokeWidth: \"65\",\n      stroke: \"#7700FF\",\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      variants: tickVariants,\n      style: {\n        pathLength: pathLength,\n        opacity: opacity\n      },\n      custom: isChecked\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Checkbox, \"zbyhFr+npqra3Ha/SecZnfOkyhQ=\", false, function () {\n  return [useMotionValue, useTransform];\n});\n\n_c = Checkbox;\nexport default Checkbox;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkbox\");","map":{"version":3,"sources":["/Users/dimitripl/Developer/restaurant/Components/Checkbox.js"],"names":["React","useState","motion","useMotionValue","useTransform","tickVariants","pressed","isChecked","pathLength","checked","unchecked","boxVariants","hover","scale","strokeWidth","stroke","Checkbox","setIsChecked","opacity"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,MAAT,EAAiBC,cAAjB,EAAiCC,YAAjC,QAAqD,eAArD;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,iBAACC,SAAD;AAAA,WAAgB;AAAEC,MAAAA,UAAU,EAAED,SAAS,GAAG,IAAH,GAAU;AAAjC,KAAhB;AAAA,GADU;AAEnBE,EAAAA,OAAO,EAAE;AAAED,IAAAA,UAAU,EAAE;AAAd,GAFU;AAGnBE,EAAAA,SAAS,EAAE;AAAEF,IAAAA,UAAU,EAAE;AAAd;AAHQ,CAArB;AAMA,IAAMG,WAAW,GAAG;AAClBC,EAAAA,KAAK,EAAE;AAAEC,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,WAAW,EAAE;AAA5B,GADW;AAElBR,EAAAA,OAAO,EAAE;AAAEO,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,WAAW,EAAE;AAA5B,GAFS;AAGlBL,EAAAA,OAAO,EAAE;AAAEM,IAAAA,MAAM,EAAE;AAAV,GAHS;AAIlBL,EAAAA,SAAS,EAAE;AAAEK,IAAAA,MAAM,EAAE,MAAV;AAAkBD,IAAAA,WAAW,EAAE;AAA/B;AAJO,CAApB;AAOA,OAAO,IAAME,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA;;AAAA,kBACMf,QAAQ,CAAC,KAAD,CADd;AAAA,MACrBM,SADqB;AAAA,MACVU,YADU;;AAE5B,MAAMT,UAAU,GAAGL,cAAc,CAAC,CAAD,CAAjC;AACA,MAAMe,OAAO,GAAGd,YAAY,CAACI,UAAD,EAAa,CAAC,IAAD,EAAO,IAAP,CAAb,EAA2B,CAAC,CAAD,EAAI,CAAJ,CAA3B,CAA5B;AAEA,sBACE,QAAC,MAAD,CAAQ,GAAR;AACE,IAAA,OAAO,EAAE,KADX;AAEE,IAAA,OAAO,EAAED,SAAS,GAAG,SAAH,GAAe,WAFnC;AAGE,IAAA,UAAU,EAAC,OAHb;AAIE,IAAA,QAAQ,EAAC,SAJX;AAKE,IAAA,KAAK,EAAC,KALR;AAME,IAAA,MAAM,EAAC,KANT;AAOE,IAAA,OAAO,EAAE;AAAA,aAAMU,YAAY,CAAC,CAACV,SAAF,CAAlB;AAAA,KAPX;AAAA,4BASE,QAAC,MAAD,CAAQ,IAAR;AACE,MAAA,CAAC,EAAC,2KADJ;AAEE,MAAA,IAAI,EAAC,aAFP;AAGE,MAAA,WAAW,EAAC,IAHd;AAIE,MAAA,MAAM,EAAC,SAJT;AAKE,MAAA,QAAQ,EAAEI;AALZ;AAAA;AAAA;AAAA;AAAA,aATF,eAgBE,QAAC,MAAD,CAAQ,IAAR;AACE,MAAA,CAAC,EAAC,2CADJ;AAEE,MAAA,SAAS,EAAC,qDAFZ;AAGE,MAAA,IAAI,EAAC,aAHP;AAIE,MAAA,WAAW,EAAC,IAJd;AAKE,MAAA,MAAM,EAAC,kBALT;AAME,MAAA,aAAa,EAAC,OANhB;AAOE,MAAA,cAAc,EAAC,OAPjB;AAQE,MAAA,QAAQ,EAAEN,YARZ;AASE,MAAA,KAAK,EAAE;AAAEG,QAAAA,UAAU,EAAVA,UAAF;AAAcU,QAAAA,OAAO,EAAPA;AAAd,OATT;AAUE,MAAA,MAAM,EAAEX;AAVV;AAAA;AAAA;AAAA;AAAA,aAhBF,eA4BE,QAAC,MAAD,CAAQ,IAAR;AACE,MAAA,CAAC,EAAC,2CADJ;AAEE,MAAA,SAAS,EAAC,qDAFZ;AAGE,MAAA,IAAI,EAAC,aAHP;AAIE,MAAA,WAAW,EAAC,IAJd;AAKE,MAAA,MAAM,EAAC,SALT;AAME,MAAA,aAAa,EAAC,OANhB;AAOE,MAAA,cAAc,EAAC,OAPjB;AAQE,MAAA,QAAQ,EAAEF,YARZ;AASE,MAAA,KAAK,EAAE;AAAEG,QAAAA,UAAU,EAAVA,UAAF;AAAcU,QAAAA,OAAO,EAAPA;AAAd,OATT;AAUE,MAAA,MAAM,EAAEX;AAVV;AAAA;AAAA;AAAA;AAAA,aA5BF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AA2CD,CAhDM;;GAAMS,Q;UAEQb,c,EACHC,Y;;;KAHLY,Q;AAiDb,eAAeA,QAAf","sourcesContent":["import * as React from \"react\";\nimport { useState } from \"react\";\nimport { motion, useMotionValue, useTransform } from \"framer-motion\";\n\nconst tickVariants = {\n  pressed: (isChecked) => ({ pathLength: isChecked ? 0.85 : 0.2 }),\n  checked: { pathLength: 1 },\n  unchecked: { pathLength: 0 }\n};\n\nconst boxVariants = {\n  hover: { scale: 1.05, strokeWidth: 60 },\n  pressed: { scale: 0.95, strokeWidth: 35 },\n  checked: { stroke: \"#FF008C\" },\n  unchecked: { stroke: \"#ddd\", strokeWidth: 50 }\n};\n\nexport const Checkbox = () => {\n  const [isChecked, setIsChecked] = useState(false);\n  const pathLength = useMotionValue(0);\n  const opacity = useTransform(pathLength, [0.05, 0.15], [0, 1]);\n\n  return (\n    <motion.svg\n      initial={false}\n      animate={isChecked ? \"checked\" : \"unchecked\"}\n      whileHover=\"hover\"\n      whileTap=\"pressed\"\n      width=\"440\"\n      height=\"440\"\n      onClick={() => setIsChecked(!isChecked)}\n    >\n      <motion.path\n        d=\"M 72 136 C 72 100.654 100.654 72 136 72 L 304 72 C 339.346 72 368 100.654 368 136 L 368 304 C 368 339.346 339.346 368 304 368 L 136 368 C 100.654 368 72 339.346 72 304 Z\"\n        fill=\"transparent\"\n        strokeWidth=\"50\"\n        stroke=\"#FF008C\"\n        variants={boxVariants}\n      />\n      <motion.path\n        d=\"M 0 128.666 L 128.658 257.373 L 341.808 0\"\n        transform=\"translate(54.917 88.332) rotate(-4 170.904 128.687)\"\n        fill=\"transparent\"\n        strokeWidth=\"65\"\n        stroke=\"hsl(0, 0%, 100%)\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        variants={tickVariants}\n        style={{ pathLength, opacity }}\n        custom={isChecked}\n      />\n      <motion.path\n        d=\"M 0 128.666 L 128.658 257.373 L 341.808 0\"\n        transform=\"translate(54.917 68.947) rotate(-4 170.904 128.687)\"\n        fill=\"transparent\"\n        strokeWidth=\"65\"\n        stroke=\"#7700FF\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        variants={tickVariants}\n        style={{ pathLength, opacity }}\n        custom={isChecked}\n      />\n    </motion.svg>\n  );\n};\nexport default Checkbox;"]},"metadata":{},"sourceType":"module"}