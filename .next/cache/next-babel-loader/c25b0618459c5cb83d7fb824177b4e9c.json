{"ast":null,"code":"import _defineProperty from \"/Users/dimitripl/iCloud Drive (Archive)/Developer/restaurant/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"/Users/dimitripl/iCloud Drive (Archive)/Developer/restaurant/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/dimitripl/iCloud Drive (Archive)/Developer/restaurant/utils/SplitTextWrapper.js\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { motion } from 'framer-motion';\n\nvar SplitTextWrapper = function SplitTextWrapper(_ref) {\n  var children = _ref.children,\n      rest = _objectWithoutProperties(_ref, [\"children\"]);\n\n  var words = children.split(' ');\n  return words.map(function (word, i) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'inline-block',\n        overflow: 'hidden'\n      },\n      children: /*#__PURE__*/_jsxDEV(motion.div, _objectSpread(_objectSpread({}, rest), {}, {\n        style: {\n          display: 'inline-block',\n          willChange: 'transform'\n        },\n        custom: i,\n        children: word + (i !== words.length - 1 ? \"\\xA0\" : '')\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, _this)\n    }, children + i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, _this);\n  });\n};\n\n_c = SplitTextWrapper;\nexport default SplitTextWrapper;\n\nvar _c;\n\n$RefreshReg$(_c, \"SplitTextWrapper\");","map":{"version":3,"sources":["/Users/dimitripl/iCloud Drive (Archive)/Developer/restaurant/utils/SplitTextWrapper.js"],"names":["React","motion","SplitTextWrapper","children","rest","words","split","map","word","i","display","overflow","willChange","length"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,eAAvB;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,OAA2B;AAAA,MAAxBC,QAAwB,QAAxBA,QAAwB;AAAA,MAAXC,IAAW;;AAClD,MAAIC,KAAK,GAAGF,QAAQ,CAACG,KAAT,CAAe,GAAf,CAAZ;AACA,SAAOD,KAAK,CAACE,GAAN,CAAU,UAACC,IAAD,EAAOC,CAAP,EAAa;AAC5B,wBACE;AAEE,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE,cAAX;AAA2BC,QAAAA,QAAQ,EAAE;AAArC,OAFT;AAAA,6BAIE,QAAC,MAAD,CAAQ,GAAR,kCACMP,IADN;AAEE,QAAA,KAAK,EAAE;AAAEM,UAAAA,OAAO,EAAE,cAAX;AAA2BE,UAAAA,UAAU,EAAE;AAAvC,SAFT;AAGE,QAAA,MAAM,EAAEH,CAHV;AAAA,kBAKGD,IAAI,IAAIC,CAAC,KAAKJ,KAAK,CAACQ,MAAN,GAAe,CAArB,GAAyB,MAAzB,GAAoC,EAAxC;AALP;AAAA;AAAA;AAAA;AAAA;AAJF,OACOV,QAAQ,GAAGM,CADlB;AAAA;AAAA;AAAA;AAAA,aADF;AAcD,GAfM,CAAP;AAgBD,CAlBD;;KAAMP,gB;AAoBN,eAAeA,gBAAf","sourcesContent":["import React from 'react';\nimport { motion } from 'framer-motion';\n\nconst SplitTextWrapper = ({ children, ...rest }) => {\n  let words = children.split(' ');\n  return words.map((word, i) => {\n    return (\n      <div\n        key={children + i}\n        style={{ display: 'inline-block', overflow: 'hidden' }}\n      >\n        <motion.div\n          {...rest}\n          style={{ display: 'inline-block', willChange: 'transform' }}\n          custom={i}\n        >\n          {word + (i !== words.length - 1 ? '\\u00A0' : '')}\n        </motion.div>\n      </div>\n    );\n  });\n};\n\nexport default SplitTextWrapper;\n"]},"metadata":{},"sourceType":"module"}